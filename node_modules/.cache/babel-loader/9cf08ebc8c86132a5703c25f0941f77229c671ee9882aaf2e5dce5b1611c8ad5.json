{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damun\\\\sql-quiz-app\\\\src\\\\components\\\\QuizInterface.js\",\n  _s = $RefreshSig$();\n// QuizInterface.js - Main Quiz Component\n// This component handles the entire quiz experience including:\n// - Displaying questions one at a time\n// - Multiple choice answer selection\n// - Progress tracking\n// - Score calculation\n// - Immediate feedback with explanations\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { getRandomQuestions, quizConfig } from '../data/quizQuestions';\n\n// Styled component for the quiz container\n// Creates a clean, card-like interface for the quiz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContainer = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 16px;\n  padding: 30px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  margin: 0 auto;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    margin: 0 10px;\n  }\n`;\n\n// Progress bar container\n_c = QuizContainer;\nconst ProgressContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\n// Progress bar styling\n_c2 = ProgressContainer;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background: rgba(102, 126, 234, 0.2);\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 10px;\n`;\n\n// Animated progress fill\n_c3 = ProgressBar;\nconst ProgressFill = styled(motion.div)`\n  height: 100%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 4px;\n`;\n\n// Progress text\n_c4 = ProgressFill;\nconst ProgressText = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #666;\n  font-weight: 500;\n`;\n\n// Question container\n_c5 = ProgressText;\nconst QuestionContainer = styled(motion.div)`\n  margin-bottom: 30px;\n`;\n\n// Question text styling\n_c6 = QuestionContainer;\nconst QuestionText = styled.h2`\n  font-size: 1.4rem;\n  color: #333;\n  margin-bottom: 20px;\n  line-height: 1.5;\n  font-weight: 600;\n  \n  @media (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`;\n\n// Question metadata (difficulty, category)\n_c7 = QuestionText;\nconst QuestionMeta = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 25px;\n  font-size: 14px;\n`;\n_c8 = QuestionMeta;\nconst MetaTag = styled.span`\n  background: ${props => {\n  switch (props.difficulty) {\n    case 'beginner':\n      return 'rgba(34, 197, 94, 0.1)';\n    case 'intermediate':\n      return 'rgba(59, 130, 246, 0.1)';\n    case 'advanced':\n      return 'rgba(245, 158, 11, 0.1)';\n    case 'expert':\n      return 'rgba(239, 68, 68, 0.1)';\n    default:\n      return 'rgba(107, 114, 128, 0.1)';\n  }\n}};\n  color: ${props => {\n  switch (props.difficulty) {\n    case 'beginner':\n      return '#22c55e';\n    case 'intermediate':\n      return '#3b82f6';\n    case 'advanced':\n      return '#f59e0b';\n    case 'expert':\n      return '#ef4444';\n    default:\n      return '#6b7280';\n  }\n}};\n  padding: 4px 12px;\n  border-radius: 20px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\n// Options container\n_c9 = MetaTag;\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\n// Individual option button\n_c0 = OptionsContainer;\nconst OptionButton = styled(motion.button)`\n  background: ${props => {\n  if (props.isSelected) {\n    return props.isCorrect ? 'rgba(34, 197, 94, 0.1)' : 'rgba(239, 68, 68, 0.1)';\n  }\n  return 'rgba(255, 255, 255, 0.8)';\n}};\n  border: 2px solid ${props => {\n  if (props.isSelected) {\n    return props.isCorrect ? '#22c55e' : '#ef4444';\n  }\n  return 'rgba(102, 126, 234, 0.2)';\n}};\n  color: ${props => {\n  if (props.isSelected) {\n    return props.isCorrect ? '#22c55e' : '#ef4444';\n  }\n  return '#333';\n}};\n  padding: 16px 20px;\n  border-radius: 12px;\n  text-align: left;\n  font-size: 16px;\n  cursor: ${props => props.showAnswer ? 'default' : 'pointer'};\n  transition: all 0.2s ease;\n  position: relative;\n  \n  &:hover {\n    ${props => !props.showAnswer && `\n      background: rgba(102, 126, 234, 0.05);\n      border-color: rgba(102, 126, 234, 0.4);\n      transform: translateY(-1px);\n    `}\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 14px 16px;\n    font-size: 14px;\n  }\n`;\n\n// Option letter indicator\n_c1 = OptionButton;\nconst OptionLetter = styled.span`\n  font-weight: 600;\n  margin-right: 12px;\n  color: #667eea;\n`;\n\n// Feedback container for explanations\n_c10 = OptionLetter;\nconst FeedbackContainer = styled(motion.div)`\n  margin-top: 25px;\n  padding: 20px;\n  background: ${props => props.isCorrect ? 'rgba(34, 197, 94, 0.05)' : 'rgba(239, 68, 68, 0.05)'};\n  border: 1px solid ${props => props.isCorrect ? 'rgba(34, 197, 94, 0.2)' : 'rgba(239, 68, 68, 0.2)'};\n  border-radius: 12px;\n`;\n_c11 = FeedbackContainer;\nconst FeedbackTitle = styled.h3`\n  color: ${props => props.isCorrect ? '#22c55e' : '#ef4444'};\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n_c12 = FeedbackTitle;\nconst FeedbackText = styled.p`\n  color: #666;\n  line-height: 1.6;\n  margin-bottom: 15px;\n`;\n_c13 = FeedbackText;\nconst SQLExample = styled.div`\n  background: #1e293b;\n  color: #e2e8f0;\n  padding: 15px;\n  border-radius: 8px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 14px;\n  overflow-x: auto;\n  margin-top: 10px;\n`;\n\n// Navigation buttons container\n_c14 = SQLExample;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\n// Styled button component\n_c15 = ButtonContainer;\nconst Button = styled(motion.button)`\n  background: ${props => props.variant === 'primary' ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'rgba(255, 255, 255, 0.8)'};\n  color: ${props => props.variant === 'primary' ? 'white' : '#333'};\n  border: 2px solid ${props => props.variant === 'primary' ? 'transparent' : 'rgba(102, 126, 234, 0.2)'};\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 20px;\n    font-size: 14px;\n  }\n`;\n\n// Timer component\n_c16 = Button;\nconst Timer = styled.div`\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  color: #667eea;\n  margin-bottom: 20px;\n`;\n\n// QuizInterface component\n_c17 = Timer;\nfunction QuizInterface({\n  quizData,\n  updateQuizProgress,\n  onComplete\n}) {\n  _s();\n  // State management for the quiz\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(quizConfig.timeLimit);\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n\n  // Initialize quiz when component mounts\n  useEffect(() => {\n    const randomQuestions = getRandomQuestions(quizConfig.questionsPerQuiz);\n    setQuestions(randomQuestions);\n    updateQuizProgress({\n      totalQuestions: randomQuestions.length\n    });\n  }, [updateQuizProgress]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft > 0 && !isQuizComplete) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !isQuizComplete) {\n      var _questions$currentQue;\n      // Handle quiz completion directly here to avoid dependency issues\n      setIsQuizComplete(true);\n      const finalScore = selectedAnswer === ((_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.correctAnswer) ? score + 1 : score;\n      updateQuizProgress({\n        score: finalScore,\n        isComplete: true,\n        currentQuestion: currentQuestionIndex\n      });\n      onComplete();\n    }\n  }, [timeLeft, isQuizComplete, selectedAnswer, questions, currentQuestionIndex, score, updateQuizProgress, onComplete]);\n\n  // Handle answer selection\n  const handleAnswerSelect = answerIndex => {\n    if (showAnswer) return; // Prevent changing answer after submission\n\n    setSelectedAnswer(answerIndex);\n  };\n\n  // Handle answer submission\n  const handleSubmitAnswer = () => {\n    if (selectedAnswer === null) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setShowAnswer(true);\n  };\n\n  // Handle next question\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedAnswer(null);\n      setShowAnswer(false);\n    } else {\n      var _questions$currentQue2;\n      // Handle quiz completion directly\n      setIsQuizComplete(true);\n      const finalScore = selectedAnswer === ((_questions$currentQue2 = questions[currentQuestionIndex]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.correctAnswer) ? score + 1 : score;\n      updateQuizProgress({\n        score: finalScore,\n        isComplete: true,\n        currentQuestion: currentQuestionIndex\n      });\n      onComplete();\n    }\n  };\n\n  // Format time display\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // If no questions loaded yet\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(QuizContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Quiz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  const progress = (currentQuestionIndex + 1) / questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(QuizContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      children: [\"Time Remaining: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n          initial: {\n            width: 0\n          },\n          animate: {\n            width: `${progress}%`\n          },\n          transition: {\n            duration: 0.3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressText, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: /*#__PURE__*/_jsxDEV(QuestionContainer, {\n        initial: {\n          opacity: 0,\n          x: 20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        exit: {\n          opacity: 0,\n          x: -20\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionMeta, {\n          children: [/*#__PURE__*/_jsxDEV(MetaTag, {\n            difficulty: currentQuestion.difficulty,\n            children: currentQuestion.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MetaTag, {\n            difficulty: \"category\",\n            children: currentQuestion.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n            onClick: () => handleAnswerSelect(index),\n            isSelected: selectedAnswer === index,\n            isCorrect: index === currentQuestion.correctAnswer,\n            showAnswer: showAnswer,\n            whileHover: !showAnswer ? {\n              scale: 1.02\n            } : {},\n            whileTap: !showAnswer ? {\n              scale: 0.98\n            } : {},\n            children: [/*#__PURE__*/_jsxDEV(OptionLetter, {\n              children: [String.fromCharCode(65 + index), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), showAnswer && /*#__PURE__*/_jsxDEV(FeedbackContainer, {\n          isCorrect: selectedAnswer === currentQuestion.correctAnswer,\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: [/*#__PURE__*/_jsxDEV(FeedbackTitle, {\n            isCorrect: selectedAnswer === currentQuestion.correctAnswer,\n            children: selectedAnswer === currentQuestion.correctAnswer ? '✅ Correct!' : '❌ Incorrect'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FeedbackText, {\n            children: currentQuestion.explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SQLExample, {\n            children: currentQuestion.sqlExample\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, currentQuestionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1)),\n        disabled: currentQuestionIndex === 0,\n        whileHover: {\n          scale: 1.02\n        },\n        whileTap: {\n          scale: 0.98\n        },\n        children: \"\\u2190 Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), !showAnswer ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmitAnswer,\n        disabled: selectedAnswer === null,\n        whileHover: {\n          scale: 1.02\n        },\n        whileTap: {\n          scale: 0.98\n        },\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleNextQuestion,\n        whileHover: {\n          scale: 1.02\n        },\n        whileTap: {\n          scale: 0.98\n        },\n        children: currentQuestionIndex < questions.length - 1 ? 'Next Question →' : 'Finish Quiz'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizInterface, \"Idehyk+5+OyV/2g+I+XWNqeXey0=\");\n_c18 = QuizInterface;\nexport default QuizInterface;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"QuizContainer\");\n$RefreshReg$(_c2, \"ProgressContainer\");\n$RefreshReg$(_c3, \"ProgressBar\");\n$RefreshReg$(_c4, \"ProgressFill\");\n$RefreshReg$(_c5, \"ProgressText\");\n$RefreshReg$(_c6, \"QuestionContainer\");\n$RefreshReg$(_c7, \"QuestionText\");\n$RefreshReg$(_c8, \"QuestionMeta\");\n$RefreshReg$(_c9, \"MetaTag\");\n$RefreshReg$(_c0, \"OptionsContainer\");\n$RefreshReg$(_c1, \"OptionButton\");\n$RefreshReg$(_c10, \"OptionLetter\");\n$RefreshReg$(_c11, \"FeedbackContainer\");\n$RefreshReg$(_c12, \"FeedbackTitle\");\n$RefreshReg$(_c13, \"FeedbackText\");\n$RefreshReg$(_c14, \"SQLExample\");\n$RefreshReg$(_c15, \"ButtonContainer\");\n$RefreshReg$(_c16, \"Button\");\n$RefreshReg$(_c17, \"Timer\");\n$RefreshReg$(_c18, \"QuizInterface\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","motion","AnimatePresence","getRandomQuestions","quizConfig","jsxDEV","_jsxDEV","QuizContainer","div","_c","ProgressContainer","_c2","ProgressBar","_c3","ProgressFill","_c4","ProgressText","_c5","QuestionContainer","_c6","QuestionText","h2","_c7","QuestionMeta","_c8","MetaTag","span","props","difficulty","_c9","OptionsContainer","_c0","OptionButton","button","isSelected","isCorrect","showAnswer","_c1","OptionLetter","_c10","FeedbackContainer","_c11","FeedbackTitle","h3","_c12","FeedbackText","p","_c13","SQLExample","_c14","ButtonContainer","_c15","Button","variant","_c16","Timer","_c17","QuizInterface","quizData","updateQuizProgress","onComplete","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","setShowAnswer","score","setScore","timeLeft","setTimeLeft","timeLimit","isQuizComplete","setIsQuizComplete","randomQuestions","questionsPerQuiz","totalQuestions","length","timer","setTimeout","clearTimeout","_questions$currentQue","finalScore","correctAnswer","isComplete","currentQuestion","handleAnswerSelect","answerIndex","handleSubmitAnswer","handleNextQuestion","_questions$currentQue2","formatTime","seconds","mins","Math","floor","secs","toString","padStart","children","style","textAlign","padding","fileName","_jsxFileName","lineNumber","columnNumber","progress","initial","width","animate","transition","duration","mode","opacity","x","exit","question","category","options","map","option","index","onClick","whileHover","scale","whileTap","String","fromCharCode","y","explanation","sqlExample","max","disabled","_c18","$RefreshReg$"],"sources":["C:/Users/damun/sql-quiz-app/src/components/QuizInterface.js"],"sourcesContent":["// QuizInterface.js - Main Quiz Component\r\n// This component handles the entire quiz experience including:\r\n// - Displaying questions one at a time\r\n// - Multiple choice answer selection\r\n// - Progress tracking\r\n// - Score calculation\r\n// - Immediate feedback with explanations\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { getRandomQuestions, quizConfig } from '../data/quizQuestions';\r\n\r\n// Styled component for the quiz container\r\n// Creates a clean, card-like interface for the quiz\r\nconst QuizContainer = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 20px;\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n\r\n// Progress bar container\r\nconst ProgressContainer = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\n// Progress bar styling\r\nconst ProgressBar = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  background: rgba(102, 126, 234, 0.2);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\n// Animated progress fill\r\nconst ProgressFill = styled(motion.div)`\r\n  height: 100%;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 4px;\r\n`;\r\n\r\n// Progress text\r\nconst ProgressText = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  color: #666;\r\n  font-weight: 500;\r\n`;\r\n\r\n// Question container\r\nconst QuestionContainer = styled(motion.div)`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\n// Question text styling\r\nconst QuestionText = styled.h2`\r\n  font-size: 1.4rem;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  line-height: 1.5;\r\n  font-weight: 600;\r\n  \r\n  @media (max-width: 768px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\n// Question metadata (difficulty, category)\r\nconst QuestionMeta = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 25px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst MetaTag = styled.span`\r\n  background: ${props => {\r\n    switch (props.difficulty) {\r\n      case 'beginner': return 'rgba(34, 197, 94, 0.1)';\r\n      case 'intermediate': return 'rgba(59, 130, 246, 0.1)';\r\n      case 'advanced': return 'rgba(245, 158, 11, 0.1)';\r\n      case 'expert': return 'rgba(239, 68, 68, 0.1)';\r\n      default: return 'rgba(107, 114, 128, 0.1)';\r\n    }\r\n  }};\r\n  color: ${props => {\r\n    switch (props.difficulty) {\r\n      case 'beginner': return '#22c55e';\r\n      case 'intermediate': return '#3b82f6';\r\n      case 'advanced': return '#f59e0b';\r\n      case 'expert': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  }};\r\n  padding: 4px 12px;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n`;\r\n\r\n// Options container\r\nconst OptionsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n`;\r\n\r\n// Individual option button\r\nconst OptionButton = styled(motion.button)`\r\n  background: ${props => {\r\n    if (props.isSelected) {\r\n      return props.isCorrect ? 'rgba(34, 197, 94, 0.1)' : 'rgba(239, 68, 68, 0.1)';\r\n    }\r\n    return 'rgba(255, 255, 255, 0.8)';\r\n  }};\r\n  border: 2px solid ${props => {\r\n    if (props.isSelected) {\r\n      return props.isCorrect ? '#22c55e' : '#ef4444';\r\n    }\r\n    return 'rgba(102, 126, 234, 0.2)';\r\n  }};\r\n  color: ${props => {\r\n    if (props.isSelected) {\r\n      return props.isCorrect ? '#22c55e' : '#ef4444';\r\n    }\r\n    return '#333';\r\n  }};\r\n  padding: 16px 20px;\r\n  border-radius: 12px;\r\n  text-align: left;\r\n  font-size: 16px;\r\n  cursor: ${props => props.showAnswer ? 'default' : 'pointer'};\r\n  transition: all 0.2s ease;\r\n  position: relative;\r\n  \r\n  &:hover {\r\n    ${props => !props.showAnswer && `\r\n      background: rgba(102, 126, 234, 0.05);\r\n      border-color: rgba(102, 126, 234, 0.4);\r\n      transform: translateY(-1px);\r\n    `}\r\n  }\r\n  \r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 14px 16px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\n// Option letter indicator\r\nconst OptionLetter = styled.span`\r\n  font-weight: 600;\r\n  margin-right: 12px;\r\n  color: #667eea;\r\n`;\r\n\r\n// Feedback container for explanations\r\nconst FeedbackContainer = styled(motion.div)`\r\n  margin-top: 25px;\r\n  padding: 20px;\r\n  background: ${props => props.isCorrect ? 'rgba(34, 197, 94, 0.05)' : 'rgba(239, 68, 68, 0.05)'};\r\n  border: 1px solid ${props => props.isCorrect ? 'rgba(34, 197, 94, 0.2)' : 'rgba(239, 68, 68, 0.2)'};\r\n  border-radius: 12px;\r\n`;\r\n\r\nconst FeedbackTitle = styled.h3`\r\n  color: ${props => props.isCorrect ? '#22c55e' : '#ef4444'};\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst FeedbackText = styled.p`\r\n  color: #666;\r\n  line-height: 1.6;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst SQLExample = styled.div`\r\n  background: #1e293b;\r\n  color: #e2e8f0;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 14px;\r\n  overflow-x: auto;\r\n  margin-top: 10px;\r\n`;\r\n\r\n// Navigation buttons container\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 30px;\r\n  gap: 15px;\r\n  \r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\n// Styled button component\r\nconst Button = styled(motion.button)`\r\n  background: ${props => props.variant === 'primary' \r\n    ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' \r\n    : 'rgba(255, 255, 255, 0.8)'\r\n  };\r\n  color: ${props => props.variant === 'primary' ? 'white' : '#333'};\r\n  border: 2px solid ${props => props.variant === 'primary' \r\n    ? 'transparent' \r\n    : 'rgba(102, 126, 234, 0.2)'\r\n  };\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n  \r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 20px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\n// Timer component\r\nconst Timer = styled.div`\r\n  text-align: center;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #667eea;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\n// QuizInterface component\r\nfunction QuizInterface({ quizData, updateQuizProgress, onComplete }) {\r\n  // State management for the quiz\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(quizConfig.timeLimit);\r\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\r\n\r\n  // Initialize quiz when component mounts\r\n  useEffect(() => {\r\n    const randomQuestions = getRandomQuestions(quizConfig.questionsPerQuiz);\r\n    setQuestions(randomQuestions);\r\n    updateQuizProgress({ totalQuestions: randomQuestions.length });\r\n  }, [updateQuizProgress]);\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    if (timeLeft > 0 && !isQuizComplete) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0 && !isQuizComplete) {\r\n      // Handle quiz completion directly here to avoid dependency issues\r\n      setIsQuizComplete(true);\r\n      const finalScore = selectedAnswer === questions[currentQuestionIndex]?.correctAnswer \r\n        ? score + 1 \r\n        : score;\r\n      \r\n      updateQuizProgress({\r\n        score: finalScore,\r\n        isComplete: true,\r\n        currentQuestion: currentQuestionIndex\r\n      });\r\n      \r\n      onComplete();\r\n    }\r\n  }, [timeLeft, isQuizComplete, selectedAnswer, questions, currentQuestionIndex, score, updateQuizProgress, onComplete]);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerSelect = (answerIndex) => {\r\n    if (showAnswer) return; // Prevent changing answer after submission\r\n    \r\n    setSelectedAnswer(answerIndex);\r\n  };\r\n\r\n  // Handle answer submission\r\n  const handleSubmitAnswer = () => {\r\n    if (selectedAnswer === null) return;\r\n    \r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\r\n    \r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setShowAnswer(true);\r\n  };\r\n\r\n  // Handle next question\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setSelectedAnswer(null);\r\n      setShowAnswer(false);\r\n    } else {\r\n      // Handle quiz completion directly\r\n      setIsQuizComplete(true);\r\n      const finalScore = selectedAnswer === questions[currentQuestionIndex]?.correctAnswer \r\n        ? score + 1 \r\n        : score;\r\n      \r\n      updateQuizProgress({\r\n        score: finalScore,\r\n        isComplete: true,\r\n        currentQuestion: currentQuestionIndex\r\n      });\r\n      \r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  // Format time display\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // If no questions loaded yet\r\n  if (questions.length === 0) {\r\n    return (\r\n      <QuizContainer>\r\n        <div style={{ textAlign: 'center', padding: '40px' }}>\r\n          <h2>Loading Quiz...</h2>\r\n        </div>\r\n      </QuizContainer>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const progress = ((currentQuestionIndex + 1) / questions.length) * 100;\r\n\r\n  return (\r\n    <QuizContainer>\r\n      {/* Timer */}\r\n      <Timer>\r\n        Time Remaining: {formatTime(timeLeft)}\r\n      </Timer>\r\n\r\n      {/* Progress Bar */}\r\n      <ProgressContainer>\r\n        <ProgressBar>\r\n          <ProgressFill\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${progress}%` }}\r\n            transition={{ duration: 0.3 }}\r\n          />\r\n        </ProgressBar>\r\n        <ProgressText>\r\n          <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\r\n          <span>Score: {score}</span>\r\n        </ProgressText>\r\n      </ProgressContainer>\r\n\r\n      {/* Question */}\r\n      <AnimatePresence mode=\"wait\">\r\n        <QuestionContainer\r\n          key={currentQuestionIndex}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: -20 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <QuestionText>{currentQuestion.question}</QuestionText>\r\n          \r\n          <QuestionMeta>\r\n            <MetaTag difficulty={currentQuestion.difficulty}>\r\n              {currentQuestion.difficulty}\r\n            </MetaTag>\r\n            <MetaTag difficulty=\"category\">\r\n              {currentQuestion.category}\r\n            </MetaTag>\r\n          </QuestionMeta>\r\n\r\n          {/* Answer Options */}\r\n          <OptionsContainer>\r\n            {currentQuestion.options.map((option, index) => (\r\n              <OptionButton\r\n                key={index}\r\n                onClick={() => handleAnswerSelect(index)}\r\n                isSelected={selectedAnswer === index}\r\n                isCorrect={index === currentQuestion.correctAnswer}\r\n                showAnswer={showAnswer}\r\n                whileHover={!showAnswer ? { scale: 1.02 } : {}}\r\n                whileTap={!showAnswer ? { scale: 0.98 } : {}}\r\n              >\r\n                <OptionLetter>{String.fromCharCode(65 + index)}.</OptionLetter>\r\n                {option}\r\n              </OptionButton>\r\n            ))}\r\n          </OptionsContainer>\r\n\r\n          {/* Feedback */}\r\n          {showAnswer && (\r\n            <FeedbackContainer\r\n              isCorrect={selectedAnswer === currentQuestion.correctAnswer}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              <FeedbackTitle isCorrect={selectedAnswer === currentQuestion.correctAnswer}>\r\n                {selectedAnswer === currentQuestion.correctAnswer ? '✅ Correct!' : '❌ Incorrect'}\r\n              </FeedbackTitle>\r\n              <FeedbackText>{currentQuestion.explanation}</FeedbackText>\r\n              <SQLExample>\r\n                {currentQuestion.sqlExample}\r\n              </SQLExample>\r\n            </FeedbackContainer>\r\n          )}\r\n        </QuestionContainer>\r\n      </AnimatePresence>\r\n\r\n      {/* Navigation Buttons */}\r\n      <ButtonContainer>\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={() => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1))}\r\n          disabled={currentQuestionIndex === 0}\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          ← Previous\r\n        </Button>\r\n        \r\n        {!showAnswer ? (\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleSubmitAnswer}\r\n            disabled={selectedAnswer === null}\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            Submit Answer\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleNextQuestion}\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            {currentQuestionIndex < questions.length - 1 ? 'Next Question →' : 'Finish Quiz'}\r\n          </Button>\r\n        )}\r\n      </ButtonContainer>\r\n    </QuizContainer>\r\n  );\r\n}\r\n\r\nexport default QuizInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}