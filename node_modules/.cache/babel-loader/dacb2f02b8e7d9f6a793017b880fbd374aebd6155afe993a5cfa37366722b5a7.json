{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damun\\\\sql-quiz-app\\\\src\\\\components\\\\DatabaseViewer.js\",\n  _s = $RefreshSig$();\n// DatabaseViewer.js - Database Exploration Component\n// This component allows users to explore the sample database by:\n// - Viewing table schemas and data\n// - Running custom SQL queries\n// - Seeing query results in a formatted table\n// - Learning from sample queries\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { sampleDatabase, sampleQueries, databaseSchema } from '../data/sampleDatabase';\n\n// Main container for the database viewer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewerContainer = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 16px;\n  padding: 30px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    margin: 0 10px;\n  }\n`;\n\n// Section headers\n_c = ViewerContainer;\nconst SectionHeader = styled.h2`\n  color: #333;\n  font-size: 1.8rem;\n  margin-bottom: 20px;\n  font-weight: 600;\n  border-bottom: 2px solid rgba(102, 126, 234, 0.2);\n  padding-bottom: 10px;\n`;\n\n// Tabs container for switching between views\n_c2 = SectionHeader;\nconst TabsContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 30px;\n  background: rgba(102, 126, 234, 0.1);\n  padding: 8px;\n  border-radius: 12px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\n// Individual tab button\n_c3 = TabsContainer;\nconst TabButton = styled.button`\n  flex: 1;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 8px;\n  background: ${props => props.$active ? 'white' : 'transparent'};\n  color: ${props => props.$active ? '#667eea' : '#666'};\n  font-weight: ${props => props.$active ? '600' : '500'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.$active ? 'white' : 'rgba(255, 255, 255, 0.5)'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n\n// Schema section styling\n_c4 = TabButton;\nconst SchemaSection = styled.div`\n  margin-bottom: 40px;\n`;\n_c5 = SchemaSection;\nconst TableCard = styled(motion.div)`\n  background: white;\n  border: 1px solid rgba(102, 126, 234, 0.2);\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n`;\n_c6 = TableCard;\nconst TableName = styled.h3`\n  color: #667eea;\n  font-size: 1.3rem;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n_c7 = TableName;\nconst TableDescription = styled.p`\n  color: #666;\n  margin-bottom: 15px;\n  font-style: italic;\n`;\n_c8 = TableDescription;\nconst ColumnGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 2fr;\n  gap: 10px;\n  font-size: 14px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 5px;\n  }\n`;\n_c9 = ColumnGrid;\nconst ColumnHeader = styled.div`\n  font-weight: 600;\n  color: #333;\n  padding: 8px;\n  background: rgba(102, 126, 234, 0.1);\n  border-radius: 6px;\n`;\n_c0 = ColumnHeader;\nconst ColumnRow = styled.div`\n  padding: 8px;\n  border-bottom: 1px solid rgba(102, 126, 234, 0.1);\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\n// Query section styling\n_c1 = ColumnRow;\nconst QuerySection = styled.div`\n  margin-bottom: 40px;\n`;\n_c10 = QuerySection;\nconst QueryInput = styled.textarea`\n  width: 100%;\n  min-height: 120px;\n  padding: 15px;\n  border: 2px solid rgba(102, 126, 234, 0.2);\n  border-radius: 8px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 14px;\n  line-height: 1.5;\n  resize: vertical;\n  background: #1e293b;\n  color: #e2e8f0;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n  }\n`;\n_c11 = QueryInput;\nconst QueryButton = styled(motion.button)`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  margin-top: 15px;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\n// Results section styling\n_c12 = QueryButton;\nconst ResultsSection = styled.div`\n  margin-top: 30px;\n`;\n_c13 = ResultsSection;\nconst ResultsTable = styled.div`\n  background: white;\n  border: 1px solid rgba(102, 126, 234, 0.2);\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n`;\n_c14 = ResultsTable;\nconst TableHeader = styled.div`\n  background: rgba(102, 126, 234, 0.1);\n  padding: 15px;\n  font-weight: 600;\n  color: #333;\n  border-bottom: 1px solid rgba(102, 126, 234, 0.2);\n`;\n_c15 = TableHeader;\nconst TableBody = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n_c16 = TableBody;\nconst TableRow = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.columns};\n  gap: 1px;\n  background: #f8fafc;\n  \n  &:nth-child(even) {\n    background: white;\n  }\n  \n  &:hover {\n    background: rgba(102, 126, 234, 0.05);\n  }\n`;\n_c17 = TableRow;\nconst TableCell = styled.div`\n  padding: 12px 15px;\n  border-bottom: 1px solid rgba(102, 126, 234, 0.1);\n  font-size: 14px;\n  word-break: break-word;\n`;\n\n// Sample queries section\n_c18 = TableCell;\nconst SampleQueriesSection = styled.div`\n  margin-bottom: 40px;\n`;\n_c19 = SampleQueriesSection;\nconst QueryCard = styled(motion.div)`\n  background: white;\n  border: 1px solid rgba(102, 126, 234, 0.2);\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 15px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #667eea;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    transform: translateY(-2px);\n  }\n`;\n_c20 = QueryCard;\nconst QueryTitle = styled.h4`\n  color: #333;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\n_c21 = QueryTitle;\nconst QueryDescription = styled.p`\n  color: #666;\n  margin-bottom: 12px;\n  font-size: 14px;\n`;\n_c22 = QueryDescription;\nconst QueryCode = styled.div`\n  background: #1e293b;\n  color: #e2e8f0;\n  padding: 12px;\n  border-radius: 6px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 13px;\n  overflow-x: auto;\n`;\n_c23 = QueryCode;\nconst QueryDifficulty = styled.span`\n  background: ${props => {\n  switch (props.$difficulty) {\n    case 'beginner':\n      return 'rgba(34, 197, 94, 0.1)';\n    case 'intermediate':\n      return 'rgba(59, 130, 246, 0.1)';\n    case 'advanced':\n      return 'rgba(245, 158, 11, 0.1)';\n    default:\n      return 'rgba(107, 114, 128, 0.1)';\n  }\n}};\n  color: ${props => {\n  switch (props.$difficulty) {\n    case 'beginner':\n      return '#22c55e';\n    case 'intermediate':\n      return '#3b82f6';\n    case 'advanced':\n      return '#f59e0b';\n    default:\n      return '#6b7280';\n  }\n}};\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\n// Error message styling\n_c24 = QueryDifficulty;\nconst ErrorMessage = styled.div`\n  background: rgba(239, 68, 68, 0.1);\n  border: 1px solid rgba(239, 68, 68, 0.2);\n  color: #ef4444;\n  padding: 15px;\n  border-radius: 8px;\n  margin-top: 15px;\n  font-size: 14px;\n`;\n\n// Success message styling\n_c25 = ErrorMessage;\nconst SuccessMessage = styled.div`\n  background: rgba(34, 197, 94, 0.1);\n  border: 1px solid rgba(34, 197, 94, 0.2);\n  color: #22c55e;\n  padding: 15px;\n  border-radius: 8px;\n  margin-top: 15px;\n  font-size: 14px;\n`;\n\n// DatabaseViewer component\n_c26 = SuccessMessage;\nfunction DatabaseViewer() {\n  _s();\n  const [activeTab, setActiveTab] = useState('schema');\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Simple SQL query parser and executor\n  const executeQuery = sqlQuery => {\n    try {\n      setError('');\n      setSuccess('');\n\n      // Convert query to lowercase for easier parsing\n      const query = sqlQuery.toLowerCase().trim();\n\n      // Basic SELECT query parsing\n      if (query.startsWith('select')) {\n        // Extract table name (very basic parsing)\n        let tableName = '';\n        if (query.includes('from customers')) tableName = 'customers';else if (query.includes('from products')) tableName = 'products';else if (query.includes('from orders')) tableName = 'orders';else if (query.includes('from categories')) tableName = 'categories';else if (query.includes('from order_items')) tableName = 'order_items';\n        if (!tableName) {\n          throw new Error('Table not found. Available tables: customers, products, orders, categories, order_items');\n        }\n\n        // Get data from the specified table\n        const data = sampleDatabase[tableName];\n        if (!data) {\n          throw new Error(`Table '${tableName}' not found`);\n        }\n\n        // Basic WHERE clause parsing\n        let filteredData = data;\n        if (query.includes('where')) {\n          // Very basic WHERE parsing - just for demonstration\n          if (query.includes('city = \"new york\"')) {\n            filteredData = data.filter(row => row.city === 'New York');\n          } else if (query.includes('price > 100')) {\n            filteredData = data.filter(row => row.price > 100);\n          } else if (query.includes('category_id = 1')) {\n            filteredData = data.filter(row => row.category_id === 1);\n          }\n        }\n\n        // Basic ORDER BY parsing\n        if (query.includes('order by')) {\n          if (query.includes('order by name')) {\n            filteredData.sort((a, b) => {\n              var _a$name;\n              return (_a$name = a.name) === null || _a$name === void 0 ? void 0 : _a$name.localeCompare(b.name);\n            });\n          } else if (query.includes('order by price')) {\n            filteredData.sort((a, b) => a.price - b.price);\n          }\n        }\n        setResults({\n          columns: Object.keys(filteredData[0] || {}),\n          data: filteredData.slice(0, 50) // Limit to 50 rows for display\n        });\n        setSuccess(`Query executed successfully! Found ${filteredData.length} rows.`);\n      } else {\n        throw new Error('Only SELECT queries are supported in this demo');\n      }\n    } catch (err) {\n      setError(err.message);\n      setResults(null);\n    }\n  };\n\n  // Handle sample query selection\n  const handleSampleQuery = sampleQuery => {\n    setQuery(sampleQuery.query);\n    setActiveTab('query');\n  };\n\n  // Handle query execution\n  const handleExecuteQuery = () => {\n    if (!query.trim()) {\n      setError('Please enter a SQL query');\n      return;\n    }\n    executeQuery(query);\n  };\n  return /*#__PURE__*/_jsxDEV(ViewerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      children: \"Database Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TabButton, {\n        $active: activeTab === 'schema',\n        onClick: () => setActiveTab('schema'),\n        children: \"\\uD83D\\uDCCB Database Schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabButton, {\n        $active: activeTab === 'query',\n        onClick: () => setActiveTab('query'),\n        children: \"\\uD83D\\uDD0D Run Queries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabButton, {\n        $active: activeTab === 'samples',\n        onClick: () => setActiveTab('samples'),\n        children: \"\\uD83D\\uDCA1 Sample Queries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: [activeTab === 'schema' && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(SchemaSection, {\n          children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n            children: \"Database Tables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), Object.entries(databaseSchema).map(([tableName, schema]) => /*#__PURE__*/_jsxDEV(TableCard, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            transition: {\n              duration: 0.3\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableName, {\n              children: tableName.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableDescription, {\n              children: schema.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ColumnGrid, {\n              children: [/*#__PURE__*/_jsxDEV(ColumnHeader, {\n                children: \"Column Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ColumnHeader, {\n                children: \"Data Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ColumnHeader, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 21\n              }, this), schema.columns.map((column, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ColumnRow, {\n                  children: column.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ColumnRow, {\n                  children: column.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ColumnRow, {\n                  children: column.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)]\n          }, tableName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)\n      }, \"schema\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), activeTab === 'query' && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(QuerySection, {\n          children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n            children: \"SQL Query Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QueryInput, {\n            placeholder: \"Enter your SQL query here...\\nExample: SELECT * FROM customers WHERE city = 'New York';\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QueryButton, {\n            onClick: handleExecuteQuery,\n            whileHover: {\n              scale: 1.02\n            },\n            whileTap: {\n              scale: 0.98\n            },\n            children: \"Execute Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 27\n          }, this), results && /*#__PURE__*/_jsxDEV(ResultsSection, {\n            children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n              children: \"Query Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {\n              children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n                children: [results.columns.length, \" columns, \", results.data.length, \" rows\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                  columns: `repeat(${results.columns.length}, 1fr)`,\n                  children: results.columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      fontWeight: '600',\n                      background: 'rgba(102, 126, 234, 0.1)'\n                    },\n                    children: column\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 23\n                }, this), results.data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  columns: `repeat(${results.columns.length}, 1fr)`,\n                  children: results.columns.map((column, colIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: row[column] !== undefined ? String(row[column]) : 'NULL'\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 29\n                  }, this))\n                }, rowIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)\n      }, \"query\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), activeTab === 'samples' && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(SampleQueriesSection, {\n          children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n            children: \"Sample Queries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#666',\n              marginBottom: '20px'\n            },\n            children: \"Click on any query below to load it into the query editor and try it out!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this), sampleQueries.map((sample, index) => /*#__PURE__*/_jsxDEV(QueryCard, {\n            onClick: () => handleSampleQuery(sample),\n            whileHover: {\n              scale: 1.01\n            },\n            whileTap: {\n              scale: 0.99\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'flex-start',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(QueryTitle, {\n                children: sample.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(QueryDifficulty, {\n                difficulty: sample.difficulty,\n                children: sample.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QueryDescription, {\n              children: sample.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QueryCode, {\n              children: sample.query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this)\n      }, \"samples\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n}\n_s(DatabaseViewer, \"8nnUnek/XhjvM1fl3DdAy3m8ocg=\");\n_c27 = DatabaseViewer;\nexport default DatabaseViewer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27;\n$RefreshReg$(_c, \"ViewerContainer\");\n$RefreshReg$(_c2, \"SectionHeader\");\n$RefreshReg$(_c3, \"TabsContainer\");\n$RefreshReg$(_c4, \"TabButton\");\n$RefreshReg$(_c5, \"SchemaSection\");\n$RefreshReg$(_c6, \"TableCard\");\n$RefreshReg$(_c7, \"TableName\");\n$RefreshReg$(_c8, \"TableDescription\");\n$RefreshReg$(_c9, \"ColumnGrid\");\n$RefreshReg$(_c0, \"ColumnHeader\");\n$RefreshReg$(_c1, \"ColumnRow\");\n$RefreshReg$(_c10, \"QuerySection\");\n$RefreshReg$(_c11, \"QueryInput\");\n$RefreshReg$(_c12, \"QueryButton\");\n$RefreshReg$(_c13, \"ResultsSection\");\n$RefreshReg$(_c14, \"ResultsTable\");\n$RefreshReg$(_c15, \"TableHeader\");\n$RefreshReg$(_c16, \"TableBody\");\n$RefreshReg$(_c17, \"TableRow\");\n$RefreshReg$(_c18, \"TableCell\");\n$RefreshReg$(_c19, \"SampleQueriesSection\");\n$RefreshReg$(_c20, \"QueryCard\");\n$RefreshReg$(_c21, \"QueryTitle\");\n$RefreshReg$(_c22, \"QueryDescription\");\n$RefreshReg$(_c23, \"QueryCode\");\n$RefreshReg$(_c24, \"QueryDifficulty\");\n$RefreshReg$(_c25, \"ErrorMessage\");\n$RefreshReg$(_c26, \"SuccessMessage\");\n$RefreshReg$(_c27, \"DatabaseViewer\");","map":{"version":3,"names":["React","useState","styled","motion","AnimatePresence","sampleDatabase","sampleQueries","databaseSchema","jsxDEV","_jsxDEV","ViewerContainer","div","_c","SectionHeader","h2","_c2","TabsContainer","_c3","TabButton","button","props","$active","_c4","SchemaSection","_c5","TableCard","_c6","TableName","h3","_c7","TableDescription","p","_c8","ColumnGrid","_c9","ColumnHeader","_c0","ColumnRow","_c1","QuerySection","_c10","QueryInput","textarea","_c11","QueryButton","_c12","ResultsSection","_c13","ResultsTable","_c14","TableHeader","_c15","TableBody","_c16","TableRow","columns","_c17","TableCell","_c18","SampleQueriesSection","_c19","QueryCard","_c20","QueryTitle","h4","_c21","QueryDescription","_c22","QueryCode","_c23","QueryDifficulty","span","$difficulty","_c24","ErrorMessage","_c25","SuccessMessage","_c26","DatabaseViewer","_s","activeTab","setActiveTab","query","setQuery","results","setResults","error","setError","success","setSuccess","executeQuery","sqlQuery","toLowerCase","trim","startsWith","tableName","includes","Error","data","filteredData","filter","row","city","price","category_id","sort","a","b","_a$name","name","localeCompare","Object","keys","slice","length","err","message","handleSampleQuery","sampleQuery","handleExecuteQuery","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mode","initial","opacity","y","animate","exit","transition","duration","entries","map","schema","toUpperCase","description","column","index","Fragment","type","placeholder","value","onChange","e","target","whileHover","scale","whileTap","style","fontWeight","background","rowIndex","colIndex","undefined","String","color","marginBottom","sample","display","justifyContent","alignItems","title","difficulty","_c27","$RefreshReg$"],"sources":["C:/Users/damun/sql-quiz-app/src/components/DatabaseViewer.js"],"sourcesContent":["// DatabaseViewer.js - Database Exploration Component\r\n// This component allows users to explore the sample database by:\r\n// - Viewing table schemas and data\r\n// - Running custom SQL queries\r\n// - Seeing query results in a formatted table\r\n// - Learning from sample queries\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { sampleDatabase, sampleQueries, databaseSchema } from '../data/sampleDatabase';\r\n\r\n// Main container for the database viewer\r\nconst ViewerContainer = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 20px;\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n\r\n// Section headers\r\nconst SectionHeader = styled.h2`\r\n  color: #333;\r\n  font-size: 1.8rem;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n  border-bottom: 2px solid rgba(102, 126, 234, 0.2);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\n// Tabs container for switching between views\r\nconst TabsContainer = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-bottom: 30px;\r\n  background: rgba(102, 126, 234, 0.1);\r\n  padding: 8px;\r\n  border-radius: 12px;\r\n  \r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\n// Individual tab button\r\nconst TabButton = styled.button`\r\n  flex: 1;\r\n  padding: 12px 20px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  background: ${props => props.$active ? 'white' : 'transparent'};\r\n  color: ${props => props.$active ? '#667eea' : '#666'};\r\n  font-weight: ${props => props.$active ? '600' : '500'};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.$active ? 'white' : 'rgba(255, 255, 255, 0.5)'};\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 16px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\n// Schema section styling\r\nconst SchemaSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst TableCard = styled(motion.div)`\r\n  background: white;\r\n  border: 1px solid rgba(102, 126, 234, 0.2);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst TableName = styled.h3`\r\n  color: #667eea;\r\n  font-size: 1.3rem;\r\n  margin-bottom: 10px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst TableDescription = styled.p`\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst ColumnGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 2fr;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    gap: 5px;\r\n  }\r\n`;\r\n\r\nconst ColumnHeader = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  padding: 8px;\r\n  background: rgba(102, 126, 234, 0.1);\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst ColumnRow = styled.div`\r\n  padding: 8px;\r\n  border-bottom: 1px solid rgba(102, 126, 234, 0.1);\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\n// Query section styling\r\nconst QuerySection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst QueryInput = styled.textarea`\r\n  width: 100%;\r\n  min-height: 120px;\r\n  padding: 15px;\r\n  border: 2px solid rgba(102, 126, 234, 0.2);\r\n  border-radius: 8px;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  resize: vertical;\r\n  background: #1e293b;\r\n  color: #e2e8f0;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #667eea;\r\n    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n  }\r\n`;\r\n\r\nconst QueryButton = styled(motion.button)`\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  \r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n  \r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\n// Results section styling\r\nconst ResultsSection = styled.div`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst ResultsTable = styled.div`\r\n  background: white;\r\n  border: 1px solid rgba(102, 126, 234, 0.2);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  background: rgba(102, 126, 234, 0.1);\r\n  padding: 15px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  border-bottom: 1px solid rgba(102, 126, 234, 0.2);\r\n`;\r\n\r\nconst TableBody = styled.div`\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${props => props.columns};\r\n  gap: 1px;\r\n  background: #f8fafc;\r\n  \r\n  &:nth-child(even) {\r\n    background: white;\r\n  }\r\n  \r\n  &:hover {\r\n    background: rgba(102, 126, 234, 0.05);\r\n  }\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n  padding: 12px 15px;\r\n  border-bottom: 1px solid rgba(102, 126, 234, 0.1);\r\n  font-size: 14px;\r\n  word-break: break-word;\r\n`;\r\n\r\n// Sample queries section\r\nconst SampleQueriesSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst QueryCard = styled(motion.div)`\r\n  background: white;\r\n  border: 1px solid rgba(102, 126, 234, 0.2);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    border-color: #667eea;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst QueryTitle = styled.h4`\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst QueryDescription = styled.p`\r\n  color: #666;\r\n  margin-bottom: 12px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst QueryCode = styled.div`\r\n  background: #1e293b;\r\n  color: #e2e8f0;\r\n  padding: 12px;\r\n  border-radius: 6px;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst QueryDifficulty = styled.span`\r\n  background: ${props => {\r\n    switch (props.$difficulty) {\r\n      case 'beginner': return 'rgba(34, 197, 94, 0.1)';\r\n      case 'intermediate': return 'rgba(59, 130, 246, 0.1)';\r\n      case 'advanced': return 'rgba(245, 158, 11, 0.1)';\r\n      default: return 'rgba(107, 114, 128, 0.1)';\r\n    }\r\n  }};\r\n  color: ${props => {\r\n    switch (props.$difficulty) {\r\n      case 'beginner': return '#22c55e';\r\n      case 'intermediate': return '#3b82f6';\r\n      case 'advanced': return '#f59e0b';\r\n      default: return '#6b7280';\r\n    }\r\n  }};\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n`;\r\n\r\n// Error message styling\r\nconst ErrorMessage = styled.div`\r\n  background: rgba(239, 68, 68, 0.1);\r\n  border: 1px solid rgba(239, 68, 68, 0.2);\r\n  color: #ef4444;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n`;\r\n\r\n// Success message styling\r\nconst SuccessMessage = styled.div`\r\n  background: rgba(34, 197, 94, 0.1);\r\n  border: 1px solid rgba(34, 197, 94, 0.2);\r\n  color: #22c55e;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n`;\r\n\r\n// DatabaseViewer component\r\nfunction DatabaseViewer() {\r\n  const [activeTab, setActiveTab] = useState('schema');\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  // Simple SQL query parser and executor\r\n  const executeQuery = (sqlQuery) => {\r\n    try {\r\n      setError('');\r\n      setSuccess('');\r\n      \r\n      // Convert query to lowercase for easier parsing\r\n      const query = sqlQuery.toLowerCase().trim();\r\n      \r\n      // Basic SELECT query parsing\r\n      if (query.startsWith('select')) {\r\n        // Extract table name (very basic parsing)\r\n        let tableName = '';\r\n        if (query.includes('from customers')) tableName = 'customers';\r\n        else if (query.includes('from products')) tableName = 'products';\r\n        else if (query.includes('from orders')) tableName = 'orders';\r\n        else if (query.includes('from categories')) tableName = 'categories';\r\n        else if (query.includes('from order_items')) tableName = 'order_items';\r\n        \r\n        if (!tableName) {\r\n          throw new Error('Table not found. Available tables: customers, products, orders, categories, order_items');\r\n        }\r\n        \r\n        // Get data from the specified table\r\n        const data = sampleDatabase[tableName];\r\n        \r\n        if (!data) {\r\n          throw new Error(`Table '${tableName}' not found`);\r\n        }\r\n        \r\n        // Basic WHERE clause parsing\r\n        let filteredData = data;\r\n        if (query.includes('where')) {\r\n          // Very basic WHERE parsing - just for demonstration\r\n          if (query.includes('city = \"new york\"')) {\r\n            filteredData = data.filter(row => row.city === 'New York');\r\n          } else if (query.includes('price > 100')) {\r\n            filteredData = data.filter(row => row.price > 100);\r\n          } else if (query.includes('category_id = 1')) {\r\n            filteredData = data.filter(row => row.category_id === 1);\r\n          }\r\n        }\r\n        \r\n        // Basic ORDER BY parsing\r\n        if (query.includes('order by')) {\r\n          if (query.includes('order by name')) {\r\n            filteredData.sort((a, b) => a.name?.localeCompare(b.name));\r\n          } else if (query.includes('order by price')) {\r\n            filteredData.sort((a, b) => a.price - b.price);\r\n          }\r\n        }\r\n        \r\n        setResults({\r\n          columns: Object.keys(filteredData[0] || {}),\r\n          data: filteredData.slice(0, 50) // Limit to 50 rows for display\r\n        });\r\n        \r\n        setSuccess(`Query executed successfully! Found ${filteredData.length} rows.`);\r\n      } else {\r\n        throw new Error('Only SELECT queries are supported in this demo');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setResults(null);\r\n    }\r\n  };\r\n\r\n  // Handle sample query selection\r\n  const handleSampleQuery = (sampleQuery) => {\r\n    setQuery(sampleQuery.query);\r\n    setActiveTab('query');\r\n  };\r\n\r\n  // Handle query execution\r\n  const handleExecuteQuery = () => {\r\n    if (!query.trim()) {\r\n      setError('Please enter a SQL query');\r\n      return;\r\n    }\r\n    executeQuery(query);\r\n  };\r\n\r\n  return (\r\n    <ViewerContainer>\r\n      <SectionHeader>Database Explorer</SectionHeader>\r\n      \r\n      {/* Navigation Tabs */}\r\n      <TabsContainer>\r\n        <TabButton \r\n          $active={activeTab === 'schema'} \r\n          onClick={() => setActiveTab('schema')}\r\n        >\r\n          📋 Database Schema\r\n        </TabButton>\r\n        <TabButton \r\n          $active={activeTab === 'query'} \r\n          onClick={() => setActiveTab('query')}\r\n        >\r\n          🔍 Run Queries\r\n        </TabButton>\r\n        <TabButton \r\n          $active={activeTab === 'samples'} \r\n          onClick={() => setActiveTab('samples')}\r\n        >\r\n          💡 Sample Queries\r\n        </TabButton>\r\n      </TabsContainer>\r\n\r\n      <AnimatePresence mode=\"wait\">\r\n        {/* Database Schema Tab */}\r\n        {activeTab === 'schema' && (\r\n          <motion.div\r\n            key=\"schema\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <SchemaSection>\r\n              <SectionHeader>Database Tables</SectionHeader>\r\n              {Object.entries(databaseSchema).map(([tableName, schema]) => (\r\n                <TableCard\r\n                  key={tableName}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <TableName>{tableName.toUpperCase()}</TableName>\r\n                  <TableDescription>{schema.description}</TableDescription>\r\n                  <ColumnGrid>\r\n                    <ColumnHeader>Column Name</ColumnHeader>\r\n                    <ColumnHeader>Data Type</ColumnHeader>\r\n                    <ColumnHeader>Description</ColumnHeader>\r\n                    {schema.columns.map((column, index) => (\r\n                      <React.Fragment key={index}>\r\n                        <ColumnRow>{column.name}</ColumnRow>\r\n                        <ColumnRow>{column.type}</ColumnRow>\r\n                        <ColumnRow>{column.description}</ColumnRow>\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </ColumnGrid>\r\n                </TableCard>\r\n              ))}\r\n            </SchemaSection>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Query Tab */}\r\n        {activeTab === 'query' && (\r\n          <motion.div\r\n            key=\"query\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <QuerySection>\r\n              <SectionHeader>SQL Query Editor</SectionHeader>\r\n              <QueryInput\r\n                placeholder=\"Enter your SQL query here...&#10;Example: SELECT * FROM customers WHERE city = 'New York';\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              <QueryButton\r\n                onClick={handleExecuteQuery}\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                Execute Query\r\n              </QueryButton>\r\n\r\n              {/* Error Message */}\r\n              {error && <ErrorMessage>{error}</ErrorMessage>}\r\n\r\n              {/* Success Message */}\r\n              {success && <SuccessMessage>{success}</SuccessMessage>}\r\n\r\n              {/* Results */}\r\n              {results && (\r\n                <ResultsSection>\r\n                  <SectionHeader>Query Results</SectionHeader>\r\n                  <ResultsTable>\r\n                    <TableHeader>\r\n                      {results.columns.length} columns, {results.data.length} rows\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                      {/* Column Headers */}\r\n                      <TableRow columns={`repeat(${results.columns.length}, 1fr)`}>\r\n                        {results.columns.map((column, index) => (\r\n                          <TableCell key={index} style={{ fontWeight: '600', background: 'rgba(102, 126, 234, 0.1)' }}>\r\n                            {column}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                      \r\n                      {/* Data Rows */}\r\n                      {results.data.map((row, rowIndex) => (\r\n                        <TableRow key={rowIndex} columns={`repeat(${results.columns.length}, 1fr)`}>\r\n                          {results.columns.map((column, colIndex) => (\r\n                            <TableCell key={colIndex}>\r\n                              {row[column] !== undefined ? String(row[column]) : 'NULL'}\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </ResultsTable>\r\n                </ResultsSection>\r\n              )}\r\n            </QuerySection>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Sample Queries Tab */}\r\n        {activeTab === 'samples' && (\r\n          <motion.div\r\n            key=\"samples\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <SampleQueriesSection>\r\n              <SectionHeader>Sample Queries</SectionHeader>\r\n              <p style={{ color: '#666', marginBottom: '20px' }}>\r\n                Click on any query below to load it into the query editor and try it out!\r\n              </p>\r\n              {sampleQueries.map((sample, index) => (\r\n                <QueryCard\r\n                  key={index}\r\n                  onClick={() => handleSampleQuery(sample)}\r\n                  whileHover={{ scale: 1.01 }}\r\n                  whileTap={{ scale: 0.99 }}\r\n                >\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '10px' }}>\r\n                    <QueryTitle>{sample.title}</QueryTitle>\r\n                    <QueryDifficulty difficulty={sample.difficulty}>\r\n                      {sample.difficulty}\r\n                    </QueryDifficulty>\r\n                  </div>\r\n                  <QueryDescription>{sample.description}</QueryDescription>\r\n                  <QueryCode>{sample.query}</QueryCode>\r\n                </QueryCard>\r\n              ))}\r\n            </SampleQueriesSection>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </ViewerContainer>\r\n  );\r\n}\r\n\r\nexport default DatabaseViewer;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,SAASC,cAAc,EAAEC,aAAa,EAAEC,cAAc,QAAQ,wBAAwB;;AAEtF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGR,MAAM,CAACS,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAfMF,eAAe;AAgBrB,MAAMG,aAAa,GAAGX,MAAM,CAACY,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMF,aAAa;AAUnB,MAAMG,aAAa,GAAGd,MAAM,CAACS,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAM,GAAA,GAbMD,aAAa;AAcnB,MAAME,SAAS,GAAGhB,MAAM,CAACiB,MAAM;AAC/B;AACA;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,OAAO,GAAG,aAAa;AAChE,WAAWD,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,MAAM;AACtD,iBAAiBD,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,KAAK,GAAG,KAAK;AACvD;AACA;AACA;AACA;AACA,kBAAkBD,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,OAAO,GAAG,0BAA0B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GArBMJ,SAAS;AAsBf,MAAMK,aAAa,GAAGrB,MAAM,CAACS,GAAG;AAChC;AACA,CAAC;AAACa,GAAA,GAFID,aAAa;AAInB,MAAME,SAAS,GAAGvB,MAAM,CAACC,MAAM,CAACQ,GAAG,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,GAAA,GAPID,SAAS;AASf,MAAME,SAAS,GAAGzB,MAAM,CAAC0B,EAAE;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,SAAS;AAOf,MAAMG,gBAAgB,GAAG5B,MAAM,CAAC6B,CAAC;AACjC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,gBAAgB;AAMtB,MAAMG,UAAU,GAAG/B,MAAM,CAACS,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GAVID,UAAU;AAYhB,MAAME,YAAY,GAAGjC,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyB,GAAA,GANID,YAAY;AAQlB,MAAME,SAAS,GAAGnC,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA2B,GAAA,GATMD,SAAS;AAUf,MAAME,YAAY,GAAGrC,MAAM,CAACS,GAAG;AAC/B;AACA,CAAC;AAAC6B,IAAA,GAFID,YAAY;AAIlB,MAAME,UAAU,GAAGvC,MAAM,CAACwC,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAlBIF,UAAU;AAoBhB,MAAMG,WAAW,GAAG1C,MAAM,CAACC,MAAM,CAACgB,MAAM,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA0B,IAAA,GA3BMD,WAAW;AA4BjB,MAAME,cAAc,GAAG5C,MAAM,CAACS,GAAG;AACjC;AACA,CAAC;AAACoC,IAAA,GAFID,cAAc;AAIpB,MAAME,YAAY,GAAG9C,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsC,IAAA,GANID,YAAY;AAQlB,MAAME,WAAW,GAAGhD,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}